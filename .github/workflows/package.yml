name: Package

on:
  push:
    branches:
      - main
      - cpack-rpm # For testing RPM packaging
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      SCCACHE_GHA_ENABLED: "true"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-test-environment

      - name: Configure CMake
        run: cmake --preset default

      - name: Build libpapilo
        run: cmake --build --preset default --target libpapilo

      - name: Create TGZ package
        run: cpack --preset tgz

      - name: Create DEB package (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          # Install library packages explicitly for CPACK_DEBIAN_PACKAGE_SHLIBDEPS
          sudo apt install -y libtbb-dev libboost-dev libboost-iostreams-dev libboost-program-options-dev libboost-serialization-dev
          cpack --preset deb

      - name: Upload TGZ package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: libpapilo-tgz-${{ runner.os }}
          path: build/packages/*.tar.gz
          retention-days: 30

      - name: Upload DEB package as artifact (Linux only)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: libpapilo-deb
          path: build/packages/*.deb
          retention-days: 30

  build-rpm:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    env:
      SCCACHE_GHA_ENABLED: "true"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: yum install -y cmake ninja-build rpm-build tbb-devel boost-devel

      - name: Setup sccache with GitHub Actions cache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Configure CMake
        run: cmake --preset default

      - name: Build libpapilo
        run: cmake --build --preset default --target libpapilo

      - name: Create RPM package
        run: cpack --preset rpm

      - name: Upload RPM package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: libpapilo-rpm
          path: build/packages/*.rpm
          retention-days: 30

  test-deb:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["24.04", "22.04"]
    container: ubuntu:${{ matrix.version }}
    permissions:
      contents: read

    steps:
      - name: Download DEB package
        uses: actions/download-artifact@v4
        with:
          name: libpapilo-deb-package
          path: .

      - name: Test apt install of DEB package
        run: |
          apt update
          apt install -y ./*.deb

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install GCC for testing
        run: apt install -y gcc

      - name: Run tests
        run: |
          gcc test/libpapilo/LinkTest.c -lpapilo -o linktest
          ./linktest

  test-rpm:
    needs: build-rpm
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    permissions:
      contents: read

    steps:
      - name: Download RPM package
        uses: actions/download-artifact@v4
        with:
          name: libpapilo-rpm
          path: .

      - name: Test yum install of RPM package
        run: |
          yum install -y ./*.rpm

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install GCC for testing
        run: yum install -y gcc

      - name: Run tests
        run: |
          gcc test/libpapilo/LinkTest.c -lpapilo -o linktest
          ./linktest

  publish:
    permissions:
      contents: write
    if: github.event_name == 'release'
    needs: [build, build-rpm, test-deb, test-rpm]
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: packages

      - name: Add packages to GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          files: |
            packages/**/*.tar.gz
            packages/**/*.deb
            packages/**/*.rpm
          tag_name: ${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
